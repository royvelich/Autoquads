#pragma once#include <Eigen/Core>#include <vector>#include <string>#include <utility>#include <iostream>#include <Eigen/SparseCore>#include <Eigen/Dense>#include <Eigen/Sparse>using namespace Eigen;typedef Eigen::SparseMatrix<double> SparseMatrixd;typedef Eigen::Triplet<double> Tripletd;class ObjectiveFunction{public:	virtual double computeValue(const VectorXd& x) = 0;	virtual void addGradientTo(VectorXd& grad, const VectorXd& x) = 0;	virtual void addHessianEntriesTo(std::vector<Tripletd>& hessianEntries, const VectorXd& x) = 0;};